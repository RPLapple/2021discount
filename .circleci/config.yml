version: 2.1

# orbs, similar with docker image
orbs:
  python: circleci/python@0.2.1

jobs:
  # First job
  build-and-test:
    docker:
      - image: circleci/python:3.7
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: discount
          MYSQL_ROOT_HOST: "%"
          MYSQL_USER: discount2021
          MYSQL_PASSWORD: discount2021
    executor: python/default
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:            # for virtual env in python and django
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt

      # to set a cache for increasing the building speed
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

#      - run:
#          name: Running test
#          command: |
#            . venv/bin/activate
#            python manage.py test

      - store_artifacts:
          path: test-reports/
          destination: python_app
      - persist_to_workspace:
          root: .
          paths:
            - build-and-text
            - app.yaml
  # 2nd job
  deploy:
    docker:
      - image: google/cloud-sdk
    executor: python/default
    steps:
      - checkout     # use checkout command to get the files
      - run:
          name: Authorizing gcloud
          command: |
            echo $GCP_KEY > gcloud-service-key.json
            gcloud auth activate-service-account --key-file=gcloud-service-key.json
            gcloud --quiet config set project ${GCP_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCP_REGION}

      - run:
          name: Deploy to App Engine
          command: |
            gcloud app deploy

workflows:
  main:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test