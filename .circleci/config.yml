version: 2.1

# orb 是 CircleCI 特有的
# 可以把 orb 想成已經打包好的環境
# 跟 DockerHub 上的 docker image 很像
orbs:
  python: circleci/python@0.2.1

jobs:
  build-and-test:      # 第一個 job，負責執行`測試`
    docker:
      - image: circleci/python:3.7
#      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: discount
          MYSQL_ROOT_HOST: "%"
          MYSQL_USER: discount2021
          MYSQL_PASSWORD: discount2021
    executor: python/default
    steps:
      - checkout
      - restore_cache:  # 為了增加 build 的速度，所設定的暫存
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:            # 執行 python 虛擬環境，並安裝相依套件
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:     # 為了增加 build 的速度，所設定的暫存
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      - run:
          name: Install
          command: |
            pip install django~=3.1.7

      - run:            # 所有測試跑起來
          name: Running enviroment
          command: |
            . venv/bin/activate

      - run: # 所有測試跑起來
          name: Running tests
          command: |
            python3 manage.py test

      - store_artifacts:
          path: test-reports/
          destination: python_app
      - persist_to_workspace:
          root: .
          paths:
            - build-and-text
            - app.yaml

  deploy:                  # 第二個 job 負責執行`部屬`
    docker:                # 採用官方的 docker image 可以省麻煩
      - image: google/cloud-sdk
    executor: python/default
    steps:                 # 加 checkout 讓 deploy 這個 job 也能拿到目錄下的檔案
      - checkout
      - run:                 # 授權 gcloud，注意 CircleCI 的環境變數
          name: Authorizing gcloud
          command: |
            echo $GCP_KEY > gcloud-service-key.json
            gcloud auth activate-service-account --key-file=gcloud-service-key.json
            gcloud --quiet config set project ${GCP_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCP_REGION}

      - run:                  # 執行 GAE 的 deploy 指令
          name: Deploy to App Engine
          command: |
            gcloud app deploy

workflows:
  main:
    jobs:
      - build-and-test
      - deploy:               # 表示 `build-and-test` 這個 job
          requires:           # 執行成功後，才會執行 `deploy` 的 job
            - build-and-test